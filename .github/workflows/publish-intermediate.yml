name: Publish intermediate npm package

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Issue or PR number"
        required: true

  pull_request:
    types: [opened, reopened, closed, synchronize, ready_for_review]
    branches:
      - "beta-4"

jobs:
  publish-npm-package:
    name: Publish NPM Package
    runs-on: ubuntu-latest
    if: "!contains(fromJson('[\"cresh-ci\", \"dependabot[bot]\", \"dependabot-preview[bot]\"]'), github.actor)"

    outputs:
      PR_NUMBER: ${{ env.PR_NUMBER }}

    steps:
      - name: Checkout Repository
        if: github.event.action != 'closed'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        if: github.event.action != 'closed'
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          registry-url: https://npm.pkg.github.com/
          scope: '@creshpay'

      - name: Issue number
        if: github.event.action != 'closed'
        id: issue-number
        run: |
          if [ -z $PR_NUMBER ]; then
            echo "PR_NUMBER=${{ github.event.inputs.pr_number }}" >> $GITHUB_ENV
          else
            echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
          fi
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Build dist
        if: github.event.action != 'closed'
        run: make

      - name: NPM Version
        if: github.event.action != 'closed'
        id: publish-version
        run: |
          VERSION=$(cat package.json | jq -r '.version')
          SHORT_SHA=$(git rev-parse --short HEAD)
          FULL_VERSION=$VERSION-pr${{ env.PR_NUMBER }}.${SHORT_SHA}
          npm --no-git-tag-version version ${FULL_VERSION}
          echo "::set-output name=VERSION::${FULL_VERSION}"
          PACKAGE_NAME=$(cat package.json | jq -r '.name')
          echo "::set-output name=PACKAGE_NAME::${PACKAGE_NAME}"

      - name: Publish
        if: github.event.action != 'closed'
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: make publish

      - name: Write comment
        uses: actions/github-script@v5
        if: github.event.action != 'closed'
        env:
          VERSION: ${{steps.publish-version.outputs.VERSION}}
          PACKAGE_NAME: ${{steps.publish-version.outputs.PACKAGE_NAME}}
        with:
          script: |
            const heading = 'ðŸ”¥ðŸ”¥ðŸ”¥ Intermediate npm package ðŸ”¥ðŸ”¥ðŸ”¥'
            const { VERSION, PACKAGE_NAME, PR_NUMBER } = process.env
            const comments = (await github.rest.issues.listComments({
                repo: context.repo.repo,
                owner: context.repo.owner,
                issue_number: PR_NUMBER,
              })).data
            let comment;
            for (let i in comments){
              if(comments[i] && comments[i].body && comments[i].body.includes(heading)){
                comment = comments[i]
                break
              }
            }

            const body = `
              ${heading}
              New version: ${VERSION}
              To install it: \`npm i ${PACKAGE_NAME}@${VERSION}\`
            `

            body.replace(/^\s+/gm, '')

            if (comment) {
              await github.rest.issues.deleteComment({
                repo: context.repo.repo,
                owner: context.repo.owner,
                comment_id: comment.id,
              })
            }
            await github.rest.issues.createComment({
              repo: context.repo.repo,
              issue_number: PR_NUMBER,
              owner: context.repo.owner,
              body,
            })

  clean-npm:
    needs:
      - publish-npm-package
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get short sha
        shell: bash
        id: get-short-sha
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "::set-output name=SHORT_SHA::$SHORT_SHA"

      - name: Delete previous versions when pushing new one
        if: github.event.action == 'synchronize' || github.event_name == 'workflow_dispatch'
        uses: creshpay/action-ghcr-batch-delete-versions@v1
        with:
          github-access-token: ${{ secrets.CI_ADMIN_PKG_TOKEN }}
          org: "${{ github.repository_owner }}"
          package_name: "ui-elements"
          package_type: "npm"
          selector: |
            type=name;operator=contains;value=-pr${{ needs.publish-npm-package.outputs.PR_NUMBER }}.
          excluder: |
            type=name;operator=contains;value=-pr${{ needs.publish-npm-package.outputs.PR_NUMBER }}.${{ steps.get-short-sha.outputs.SHORT_SHA }}
          dry-run: "0"

      - name: Delete images related to the PR when the PR is closed
        if: github.event.action == 'closed'
        uses: creshpay/action-ghcr-batch-delete-versions@v1
        with:
          github-access-token: ${{ secrets.CI_ADMIN_PKG_TOKEN }}
          org: "${{ github.repository_owner }}"
          package_name: "ui-elements"
          package_type: "npm"
          selector: |
            type=name;operator=contains;value=-pr${{ needs.publish-npm-package.outputs.PR_NUMBER }}.
          dry-run: "0"
